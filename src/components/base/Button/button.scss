.xtrButton {
	--themeColor: var(--colorBrandPrimary);
	--rippleColor: var(--themeColor);
	--rippleShadowColor: var(--themeColor);

	position: relative;
	display: flex;
	justify-content: center;
	align-items: center;
	border: none;
	border-radius: 9999px;
	cursor: pointer;
	user-select: none;

	.label {
		margin: 0;
		text-transform: uppercase;
		z-index: 1;
		color: inherit;
		transition: all var(--animDurDefault) var(--cubicBezierPrimary);
	}

	.icon {
		color: inherit;
		transition: all var(--animDurDefault) var(--cubicBezierPrimary);
	}

	.underline {
		position: absolute;
		width: 100%;
		left: 0; bottom: 0;

		> span {
			width: 20% !important;
		}
	}
	
	&::before {
		content: '';
		position: absolute;
		display: block;
		width: 100%; height: 100%;
		background: hsl(var(--themeColor));
		filter: contrast(1.2) brightness(0.8);
		clip-path: circle(0% at 50% 50%);
		border-radius: inherit;
		z-index: 0;
		opacity: 0;
		transition: all var(--animDurDefault) var(--cubicBezierPrimary);
	}

	&.primaryType, &.primaryDangerType {
		background: hsl(var(--themeColor));
		color: white;
	}

	&.secondaryType, &.secondaryDangerType {
		background: var(--colorBackgroundSecondary);
		color: var(--colorContentPrimary);
	}

	&.linkType, &.linkDangerType  {
		background: none;
		box-shadow: none !important;
		border-radius: unset;
		color: var(--colorContentPrimary);
		overflow: unset;

		.label {
			letter-spacing: unset;
			text-transform: unset;
		}

		&::before {
			display: none;
		}

		&:hover {
			color: hsl(var(--themeColor));

			.label {
				filter: contrast(0.8) brightness(1.2);
			}
		} 

		&:active {
			.label {
				filter: contrast(1.2) brightness(0.8);
			}
		} 
	}

	&.primaryDangerType, &.secondaryDangerType, &.linkDangerType {
		--themeColor: var(--colorAlertError);

		.underline span {
			background: hsl(var(--themeColor));
		}
	}

	&.miniSize {
		--rippleSize: 24px 12px;

		line-height: 16px;
		padding: 8px 16px;
		gap: 8px;

		.label {
			font-size: 12px;
			font-variation-settings: 'wdth' 75, 'wght' 400;
			letter-spacing: 2px;
		}

		&.iconOnly {
			padding: 0;

			.icon {
				width: 32px;
				height: 32px;
			}
		}
	}

	&.defaultSize {
		--rippleSize: 30px 15px;

		line-height: 18px;
		padding: 10px 20px;
		gap: 10px;

		.label {
			font-size: 14px;
			font-variation-settings: 'wdth' 75, 'wght' 500;
			letter-spacing: 2px;
		}

		&.iconOnly {
			padding: 0;

			.icon {
				width: 44px;
				height: 44px;
			}
		}
	}
	
	&.largeSize {
		--rippleSize: 48px 24px;

		line-height: 28px;
		padding: 16px 32px;
		gap: 14px;

		.label {
			font-size: 22px;
			font-variation-settings: 'wdth' 75, 'wght' 600;
			letter-spacing: 4px;
		}

		&.iconOnly {
			padding: 0;

			.icon {
				width: 60px;
				height: 60px;
			}
		}
	}

	&:hover {
		color: white;

		.underline span {
			width: 100% !important;
		}

		&::before {
			clip-path: circle(100% at 50% 50%);
			opacity: 1;
		}
	}

	&.loading {
		--loaderColor: hsl(var(--themeColor));

		pointer-events: none;
		overflow: hidden;
		background: hsl(var(--themeColor) / 80%);

		&.secondaryType, &.secondaryDangerType {
			--loaderColor: var(--colorBackgroundTertiary);

			background: var(--colorBackgroundSecondary);
		}

		&.linkType, &.linkDangerType {
			background: none;

			.underline > span {
				width: 150% !important;
			}

			&::after {
				display: none;
			}
		}

		&::after {
			content: '';
			position: absolute;
			display: block;
			width: 150%; height: 100%;
			z-index: 0;
			border-radius: 9999px;
			background-image: repeating-linear-gradient(
				60deg,
				transparent,
				transparent 0.75rem,
				var(--loaderColor) 0.75rem,
				var(--loaderColor) 1.5rem
			);
			animation: barberPole 0.25s infinite linear;
		}

		&.iconOnly {
			background: transparent;
			overflow: unset;

			&.secondaryType, &.secondaryDangerType {
				color: white;
			}

			&::before {
				clip-path: circle(45% at 50% 50%);
				opacity: 1;
			}

			&::after {
				width: 100%;
				background: none;
				border: 2px solid hsl(var(--themeColor));
				border-top-color: transparent;
				border-bottom-color: transparent;
				animation: spin 0.25s infinite linear;
			}
		}
	}

	&:disabled {
		background: hsl(var(--themeColor) / 20%);
		color: hsl(var(--themeColor) / 75%);
		pointer-events: none;
		filter: grayscale(1);

		&.secondaryType, &.secondaryDangerType {
			background: hsl(var(--themeColor) / 5%);
		}

		&.linkType {
			background: none;

			.underline {
				&::before {
					width: 0%;
				}

				span {
					width: 0%;
				}
			} 
		}
	}

	@keyframes barberPole {
		from { transform: translateX(-1.75rem); }
		to { transform: translateX(0); }
	}

	@keyframes spin {
		from { transform: rotate(0deg); }
		to { transform: rotate(180deg); }
	}
}