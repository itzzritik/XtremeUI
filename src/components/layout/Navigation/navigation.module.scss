.navigation {
	--duration: 0.4s;

	width: calc(var(--siderWidth) + 16px);
	height: 100%;
	display: flex;
	flex-direction: column;
	padding: 16px 0 28px;

	.brand {
		font-size: 32px;
		color: white;
		padding: 24px 8px;
		font-variation-settings: 'wdth' 75, 'wght' 400;
		text-transform: capitalize;
		user-select: none;
		cursor: pointer;
	}

	.routeList {
		width: 100%;
		display: flex;
		flex-direction: column;
		flex: 1;
		user-select: none;
		cursor: pointer;

		.route {
			position: relative;
			display: flex;
			align-items: center;
			gap: 2px;
			text-decoration: none;
			color: white;
			transition: all var(--duration) var(--cubicBezierPrimary);
			-webkit-tap-highlight-color: transparent;

			&::before {
				content: '';
				position: absolute;
				display: block;
				width: 100%; height: 100%;
				background: rgb(var(--colorBrandAccentRgb) / 0%);
				filter: contrast(2) brightness(0.75);
				z-index: 0;
				transition: all var(--duration) var(--cubicBezierPrimary), background var(--duration) ease;
			}

			&::after {
				content: '';
				position: absolute;
				display: block;
				width: 100%; height: 100%;
				background: rgb(var(--colorBrandAccentRgb));
				clip-path: circle(0% at calc(var(--siderWidthMini) / 2) 50%);
				filter: contrast(2) brightness(0.75);
				z-index: 0;
				opacity: 0.4;
				transition: all var(--duration) var(--cubicBezierPrimary), background var(--duration) ease;
			}

			.icon {
				width: var(--siderWidthMini);
				height: var(--siderWidthMini);
				font-size: calc(var(--siderWidthMini) - 40px);
				color: inherit;
			}

			.label {
				font-size: 16px;
				font-variation-settings: 'wdth' 75, 'wght' 400;
				text-transform: capitalize;
				color: inherit;
				z-index: 1;
			}

			&:last-of-type {
				margin-top: auto;
			}

			&:hover {
				&::before {
					background: rgb(var(--colorBrandAccentRgb) / 30%);
				}
			}

			&.loading {
				--loaderColor: rgb(var(--colorBrandAccentRgb) / 50%);
		
				background: rgb(var(--themeColor) / 80%);
				pointer-events: none;
		
				&::before {
					content: '';
					position: absolute;
					display: block;
					width: 150%; height: 100%;
					z-index: 0;
					background-image: repeating-linear-gradient(
						60deg,
						transparent,
						transparent 0.75rem,
						var(--loaderColor) 0.75rem,
						var(--loaderColor) 1.5rem
					);
					animation: barberPole 0.18s linear infinite;
				}
			}
			
			&.active {
				&::after {
					clip-path: circle(var(--siderWidth) at calc(var(--siderWidthMini) / 2) 50%);
					opacity: 1;
					transition: all var(--duration) ease-in-out, background var(--duration) ease;
				}
			}
		}
	}

	@keyframes barberPole {
		from { transform: translateX(-1.75rem); }
		to { transform: translateX(0); }
	}
}