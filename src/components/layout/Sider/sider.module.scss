.sider {
	--paddingLeft: 0px;
	--paddingRight: 0px;
	--borderRadius: 36px;
	--siderWidthMini: 60px;
	--leftSiderWidth: 300px;
	--rightSiderWidth: 300px;

	width: 100%;
	height: 100%;
	background: var(--colorBackgroundSecondary);
	padding: 0 var(--paddingRight) 0 var(--paddingLeft);
	overflow: hidden;
	transition: all var(--animDurDefault) ease;
	
	.leftSiderContainer {
		position: fixed;
		left: 0;
		width: auto; height: 100%;
		z-index: 0;
		transition: opacity var(--animDurDefault) var(--cubicBezierPrimary);
	}

	.rightSiderContainer {
		position: fixed;
		right: 0;
		width: auto; height: 100%;
		z-index: 1;
		transition: opacity var(--animDurDefault) var(--cubicBezierPrimary);
	}

	.content {
		position: relative;
		width: 100%;
		height: 100%;
		background: var(--colorBackgroundPrimary);
		box-shadow: 0 0 50px 2px rgb(0 0 0 / 24%);
		border-radius: 0;
		z-index: 2;
		transition: all var(--animDurDefault) var(--cubicBezierPrimary);
	}

	&.miniLeftSider {
		--paddingLeft: var(--siderWidthMini);

		.content {
			border-top-left-radius: var(--borderRadius);
			border-bottom-left-radius: var(--borderRadius);
		}
	}

	&.miniRightSider {
		--paddingRight: var(--siderWidthMini);

		.content {
			border-top-right-radius: var(--borderRadius);
			border-bottom-right-radius: var(--borderRadius);
		}
	}

	&.leftOpen {
		.rightSiderContainer {
			opacity: 0;
			pointer-events: none;
		}

		.content {
			border-radius: 36px;
			transform: translateX(calc(24px + var(--leftSiderWidth) - var(--paddingLeft)));
			transform-origin: left center;
			scale: 0.95;
		}
	}

	&.rightOpen {
		.leftSiderContainer {
			opacity: 0;
			pointer-events: none;
		}

		.content {
			border-radius: 36px;
			transform: translateX(calc((24px + var(--rightSiderWidth) - var(--paddingRight)) * -1));
			transform-origin: right center;
			scale: 0.95;
		}
	}

	@media (width <= 512px) {
		&.miniLeftSider {
			--paddingLeft: 0px !important;
		}

		&:not(.leftOpen) {
			.content {
				border-top-left-radius: 0 !important;
				border-bottom-left-radius: 0 !important;
			}
		}

		&.miniRightSider {
			--paddingRight: 0px !important;
		}

		&:not(.rightOpen) {
			.content {
				border-top-right-radius: 0 !important;
				border-bottom-right-radius: 0 !important;
			}
		}
	}
}