@use '../../../styles/colorSchemes';

.xtrThemePicker {
	container-type: inline-size;
	--schemeSize: 190px;
	--schemeGap: calc(var(--schemeSize) / 8);
	--globalTertiaryColor: var(--colorBackgroundTertiary);

	position: relative;
	width: 100%;
	max-width: 100%;
	display: flex;
	flex-direction: column;

	.themeSchemes {
		width: fit-content;
		display: flex;
		gap: calc(var(--schemeGap) / 1.2);

		* {
			transition: all var(--animDurDefault) var(--cubicBezierPrimary);
		}

		.themeSchemeItem {
			--rippleShadowColor: var(--globalTertiaryColor);
			--cardBorderRadius: calc(var(--schemeGap) / 2);
			
			position: relative;
			width: var(--schemeSize);
			height: calc(var(--schemeSize) * 0.8);
			background: var(--colorBackgroundSecondary);
			user-select: none;
			border: 2px solid var(--colorBackgroundTertiary);
			cursor: pointer;
			transition: all var(--animDurDefault) var(--cubicBezierPrimary), box-shadow var(--animDurDefault) linear;

			&.auto {
				@include colorSchemes.autoScheme;
			}

			&.light {
				@include colorSchemes.lightScheme;
			}

			&.dark {
				@include colorSchemes.darkScheme;
			}

			.design {
				position: relative;
				width: 100%;
				height: 100%;
				border-radius: inherit;
				overflow: hidden;
				background: var(--colorBackgroundTertiary);

				.navigation {
					position: absolute;
					top: 0; left: 0;
					width: 25%;
					height: 100%;
					display: flex;
					flex-direction: column;
					gap: calc(var(--schemeGap) / 6);
					padding: calc(var(--schemeGap) / 2.4) 0;
					background: var(--colorBackgroundTertiary);

					.navigationItem {
						width: 100%;
						height: calc(var(--schemeGap) / 6);
						background: black;
						opacity: 0.2;

						&:first-child {
							margin-top: 10px;
							background: white;
						}

						&:last-child {
							margin-top: auto;
						}
					}
				}

				.content {
					position: absolute;
					top: 0; left: 4%;
					width: 96%;
					height: 100%;
					border-top-left-radius: calc(var(--schemeGap) / 2);
					border-bottom-left-radius: calc(var(--schemeGap) / 2);
					background: var(--colorBackgroundPrimary);

					.header {
						position: absolute;
						top: 0; left: 0;
						width: 100%;
						height: calc(var(--schemeGap) / 2);
						
						&::before {
							content: '';
							position: absolute;
							top: calc(var(--schemeGap) / 3); left: calc(var(--schemeGap) / 3);
							display: block;
							width: calc(var(--schemeGap) / 4); height: calc(var(--schemeGap) / 4);
							border-radius: 9999px;
							background: var(--colorBackgroundTertiary);
						}

						&::after {
							content: '';
							position: absolute;
							top: calc(var(--schemeGap) / 3); left: calc(var(--schemeGap) / 1.2);
							display: block;
							width: calc(var(--schemeGap) * 2); height: calc(var(--schemeGap) / 4);
							border-radius: 9999px;
							background: var(--colorBackgroundTertiary);
						}
					}

					.profile {
						position: absolute;
						top: calc(var(--schemeGap) / 1.1); left: 50%;
						transform: translateX(-50%);
						width: calc(var(--schemeGap)); height: calc(var(--schemeGap));
						border-radius: 9999px;
						background: var(--colorBackgroundTertiary);

						&::before {
							content: '';
							position: absolute;
							top: calc(var(--schemeGap) * 1.2); left: 50%;
							transform: translateX(-50%);
							display: block;
							width: calc(var(--schemeGap) * 1.5); height: calc(var(--schemeGap) / 8);
							border-radius: 9999px;
							background: var(--colorBackgroundTertiary);
							transition: all var(--animDurDefault) var(--cubicBezierPrimary);
						}
					}
				}
			}

			.footer {
				position: absolute;
				bottom: 0;
				width: 100%;
				display: flex;
				justify-content: center;
				align-items: center;
				color: var(--colorContentPrimary);
				margin-bottom: calc(var(--schemeGap) / 2);
				gap: calc(var(--schemeGap) / 3);

				.footerIcon {
					font-size: max(10px, calc(var(--schemeGap) / 1.5));
					text-transform: capitalize;
					color: inherit;
				}

				.footerLabel {
					font-size: max(10px, calc(var(--schemeGap) / 1.6));
					font-variation-settings: 'wdth' 75, 'wght' 700;
					text-transform: uppercase;
					color: inherit;
				}
			}

			&:hover {
				.design {
					.content {
						top: 0; left: 20%;
						width: 80%;
					}
				}
			}

			&.active, &:hover {
				.design {
					.navigation {
						background: hsl(var(--colorBrandPrimary));

						.navigationItem {
							opacity: 0.3;
						}
					}

					.content {
						.header {
							&::before {
								background: hsl(var(--colorBrandPrimary));
							}
						}
					}
				}

				.footer {
					color: hsl(var(--colorBrandPrimary));
				}
			}
		}
	}

	.swatches {
		position: relative;
		width: calc(var(--schemeSize) * 3 + var(--schemeGap) * 2 / 1.2);
		display: grid;
		grid-template-columns: repeat(6, 1fr);
		grid-auto-rows: auto;
		gap: calc(var(--schemeGap) / 1.5);
		padding: 0 4px;
		margin-top: var(--schemeGap);;
		transition: all var(--animDurDefault) var(--cubicBezierPrimary);

		.xtrThemeSelect, .xtrColorButton {
			width: 100% !important;
			grid-column: span 2;
		}
		.xtrButton .label {
			font-variation-settings: 'wdth' 75, 'wght' 600;
			letter-spacing: 0.8px;
		}
	}

	@container (width < 640px) {
		.themeSchemes, .swatches {
			--schemeSize: 130px;
			--schemeGap: calc(var(--schemeSize) / 8);
		}
	}

	@container (width < 420px) {
		.themeSchemes, .swatches {
			--schemeSize: 100px;
			--schemeGap: calc(var(--schemeSize) / 8);
		}
		.xtrButton {
			padding: 6px 12px;

			.xtrIcon {
				--iconSize: 14px !important;
			}
			.label {
				letter-spacing: unset;
				font-size: 11px;
			}
		}
	}

	@container (width < 325px) {
		--schemeSize: 100px;

		.themeSchemeItem {
			display: none;
		}
		.swatches {
			width: 100%;
			grid-template-columns: 1fr;

			> .xtrButton:not(.xtrColorButton) {
				display: none;
			}
		}
	}
}